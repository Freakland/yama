{"name":"Lastdashboard","tagline":"Awesome node-express dashboard","body":"## Technologies\r\n\r\n| Server   | Client   |\r\n|:--------:|:--------:|\r\n|express   |Bootstrap |\r\n|mongoose  |jQuery    |\r\n|swig      |html5shiv |\r\n|underscore|responseJS|\r\n|async     |          |\r\n|execSync  |          |\r\n\r\n## How to install\r\n\r\n> On your project directory install the node module as follows:\r\n\r\n```sh\r\n$ npm install lastdashboard\r\n```\r\n\r\n## How to create the first admin\r\n\r\n> for create the first admin, just create a file **dashboardinit.js** with the content below\r\n\r\n```javascript\r\n#!/usr/bin/env node\r\n\r\nvar dashboard = require('lastdashboard');\r\n\r\ndashboard.initializeDB({\r\n        host: \"myhost\",\r\n        db:\"mydatabase\"\r\n    }, {\r\n        email: \"admin@mycompany.com\",\r\n        password: \"passphrase\"\r\n    });\r\n```\r\n\r\n> Add this script to your package.json, on scripts section, as follows\r\n\r\n```json\r\n  ...\r\n  \"scripts\": {\r\n     \"dashboard\": \"./dashboardinit.js\"\r\n  }\r\n```\r\n\r\n> Give execution permissions to this script:\r\n\r\n```sh\r\n$ chmod +x dashboardinit.js\r\n```\r\n\r\n> Now run the script with npm\r\n\r\n```sh\r\n$ npm run-script dashboard\r\n```\r\n\r\n> You got it, your admin has been created, now just implement\r\n\r\n## How to initialize\r\n\r\n> First create a file named config.js on the project root folder with this content:\r\n\r\n```javascript\r\nmodule.exports = require('./config/' + (process.env.NODE_ENV || 'development') + '.js');\r\n```\r\n\r\n> Then create a folder called config and write inside this new folder two files **development.json** and **production.json**.\r\n\r\n> Fill both files with this content\r\n\r\n```json\r\nmodule.exports = {\r\n    mongo: {\r\n        \"host\": \"myhost\",\r\n        \"db\": \"mydb\"\r\n    }\r\n}\r\n```\r\n\r\nOther arguments are user, password and port, but for this example we don't need them.\r\n\r\n> On your project main file add the next lines\r\n\r\n```javascript\r\nvar app = express();\r\n\r\n...\r\n\r\nvar dashboard = require('lastdashboard');\r\n\r\ndashboard.models.paths = [\r\n    __dirname + '/models', // add the models folder to dashboard\r\n    __dirname + '/models.js' // add the models file to dashboard\r\n];\r\n\r\n// Pass the mongoose app\r\nvar mongoose = require('mongoose');\r\ndashboard.models.app = mongoose;\r\n\r\n// Pass the express app\r\nvar app = require('express');\r\ndashboard.app = app;\r\n\r\n// If you want to create your own templates\r\ndashboard.templates = __dirname + '/templates';\r\n\r\n// If you want to create your own static files\r\ndashboard.media = __dirname + '/static';\r\n\r\n// Run dashboard with base url as param\r\ndashboard.run('/dashboard');\r\n\r\n...\r\n\r\napp.listen(9999);\r\n```\r\n\r\n## Add models to dashboard\r\n\r\n> First add statics methods to your mongoose schema\r\n\r\n```javascript\r\n\r\nvar dashboard = require('lastdashboard');\r\nAppSchema.statics = dashboard.models.statics;\r\n```\r\n\r\n**NOTE:** *dashboard.models.statics* contains to methods *list* and *load*, that are needed for the dashboard. If you want to custom them, just rewrite them on the schema definition:\r\n\r\n```\r\nAppSchema.statics = {\r\n    load: function(id, cb) {\r\n        this.findById(id, cb);\r\n    },\r\n    list: function(options, cb) {\r\n        var meta = options.meta;\r\n        var criteria = meta.criteria || {};\r\n        var order = meta.order || {};\r\n        var list = meta.list;\r\n        var fields = meta.fields;\r\n\r\n        this.find(criteria)\r\n        .sort(order)\r\n        .limit(options.perPage)\r\n        .skip(options.perPage * options.page)\r\n        .exec(function(err, collection) {\r\n            cb(err, collection);\r\n        });\r\n    }\r\n}\r\n```\r\n\r\n> Then add the model to dashboard\r\n\r\n```javascript\r\ndashboard.add({\r\n    path: 'apps',\r\n    model: 'App',\r\n    list: [ 'name', 'description', 'active' ],\r\n    edit: [ 'name', 'description', 'active' ],\r\n    fields: {\r\n        'name': {\r\n            header: 'App name',\r\n            link: true\r\n        },\r\n        'description': {\r\n            header: 'Description'\r\n        }\r\n        'active': {\r\n            header: 'Active',\r\n            widget: 'checkbox'\r\n        },\r\n        emails: {\r\n            header: 'Emails',\r\n            widget: 'csv',\r\n            placeholder: 'Type an email...',\r\n            pattern: '^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$',\r\n            link: true,\r\n            route: 'emails'\r\n        }\r\n    },\r\n    order: { //The attributes to order the results.\r\n        createdAt: 1,\r\n        active: 1\r\n    },\r\n    criteria: { //The attributes to decide what to show and what don't.\r\n        active: true\r\n    }\r\n});\r\n```\r\n\r\n> Ready go to your /dashboard and that's all\r\n\r\n## Questions?\r\n\r\n> Please write an issue at [https://github.com/lastroom/lastdashboard/issues](https://github.com/lastroom/lastdashboard/issues)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}